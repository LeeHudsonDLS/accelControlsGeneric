locktimeout = 5000;
terminator   = CR;
replytimeout = 1000;
readtimeout  = 1000;
extrainput   = Ignore;
		  
model       {   out "~ \$1 01 %01<sum8>";
                in  "\$1 OK %*2x DIGITEL %{MPC DD|MPCe|MPCq|QPC} %0<sum8>";
                @mismatch { in "%*42c\$1 OK %*2x DIGITEL %{MPC DD|MPCe|MPCq|QPC} %14<sum8>";}
            }

version     {   out "~ \$1 02 %01<sum8>";
                in  "\$1 OK %*2x %*s %*s %s %0<sum8>";
                @mismatch { in "%*42c\$1 OK %*2x %*s %*s %s %14<sum8>";}
            }

linev       {   out "~ \$1 22 %01<sum8>";
                in  "\$1 OK %*2x %d %0<sum8>";
            }

linef       {   out "~ \$1 24 %01<sum8>";
                in  "\$1 OK %*2x %d Hz %*?/\(.*\) /%0<sum8>";
            }

autost      {   out "~ \$1 34 %01<sum8>";
                in  "\$1 OK %*2x %{NO|YES} %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?s %0<sum8>";}
            }

setlinev    {   out "~ \$1 23 %d %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
            }

fan         {   out "~ \$1 32 %{OFF|ON} %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
            }

setautost   {   out "~ \$1 33 %{NO|YES} %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
            }

reset       {   out "~ \$1 07 %01<sum8>";
            }

current     {   out "~ \$1 0A \$2 %01<sum8>";
                in  "\$1 OK %*2x %g %*{AMPS|Amps} %0<sum8>";
            }

pressure    {   out "~ \$1 0B \$2 %01<sum8>";
                in  "\$1 OK %*2x %g %*s %0<sum8>";
            }

voltage     {   out "~ \$1 0C \$2 %01<sum8>";
                in  "\$1 OK %*2x %d %0<sum8>";
            }

strap       {   out "~ \$1 20 \$2 %01<sum8>";
                in  "\$1 OK %*2x %d %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?s %0<sum8>";}
            }

status      {   out "~ \$1 0D \$2 %01<sum8>";
                in  "\$1 OK %*2x %{X|W|ST|SA|R|CO|P|H|I|SH|CA}%*s %*2x %0<sum8>";
                @mismatch { in "\$1 OK %*2x %{X|W|ST|SA|R|CO|P|H|I|SH|CA}";}
            }

err         {   out "~ \$1 0D \$2,00 %01<sum8>";
                in  "\$1 OK %*2x %*[^0-9]%d %0<sum8>";
            }

size        {   out "~ \$1 11 \$2 %01<sum8>";
                in  "\$1 OK %*2x %d L/S %0<sum8>";
            }

cal         {   out "~ \$1 1D \$2 %01<sum8>";
                in  "\$1 OK %*2x %f %0<sum8>";
            }

getsps      {   out "~ \$1 3B %(\$2:SPNUM\$3)1d %01<sum8>";
			    in  "\$1 OK %*2x %*i,%*i,%*i,%(\$2:SP\$3ON.VAL)g,%(\$2:SP\$3OFF.VAL)g,%(\$2:SP\$3STATE)i %0<sum8>";
			    @mismatch { in "\$1 OK %*2x %*i,%*i,%?g,%?g,%*i %0<sum8>";} 
		    }

getsps_q    {   out "~ \$1 3B %(\$2:SPNUM\$3)1d %01<sum8>";
			    in  "\$1 OK %*2x %*i,%*i,%*i,%(\$2:SP\$3ON.VAL)g,%(\$2:SP\$3OFF.VAL)g,%(\$2:SP\$3STATE)i %0<sum8>";
			    @mismatch { in "\$1 OK %*2x %*i,%*i,%?g,%?g,%*i %0<sum8>";} 
		    }

setsps      {   out "~ \$1 3B %(F)1d,%(C)1d,%(A)2.2E,%(B)2.02E %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?g %0<sum8>";}
            }

setsps_q    {   out "~ \$1 3B %(F)1d,%(C)1d,%(A)2.2E,%(B)2.02E %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?g %0<sum8>";}
            }

setsize     {   out "~ \$1 12 \$2,%d %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
            }

setcal      {   out "~ \$1 1E \$2,%4.2f %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
            }

settext     {   out "~ \$1 ED \$2,\"%s\" %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

start       {   out "~ \$1 %{38|37} \$2 %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

tspsta      {   out "~ \$1 DE %(\$2:RELAY.VAL)d,0 %01<sum8>";
                in "\$1 OK %*2x %2x %0<sum8>";
            }

tspsta_q    {   out "~ \$1 DE %(\$2:RELAY.VAL)d,0 %01<sum8>";
                in "\$1 OK %*2x %2x %0<sum8>";
            }

filsta      {   out "~ \$1 E9 %(\$2)d %01<sum8>";
                in "\$1 OK %*2x %{01: NOT INSTALLED|02: INACTIVE|03: NEXT ACTIVE|04: FIRING|05: OPENING|06: LOW LEVEL} %0<sum8>";
            }

filsta_q    {   out "~ \$1 E9 %(\$2)d %01<sum8>";
                in "\$1 OK %*2x %{01: NOT INSTALLED|02: INACTIVE|03: NEXT ACTIVE|04: FIRING|05: OPENING|06: LOW LEVEL} %0<sum8>";
            }

power       {   out "~ \$1 74 %01<sum8>";
                in "\$1 OK %*2x %?g %*c %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?g %0<sum8>";}
            }

fil         {   out "~ \$1 DF %(\$2:RELAY.VAL)d %01<sum8>";
                in "\$1 OK %*2x %{1|2|3|4} %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?d %0<sum8>";}
            }

fil_q       {   out "~ \$1 DF %(\$2:RELAY.VAL)d %01<sum8>";
                in "\$1 OK %*2x %{1|2|3|4} %0<sum8>";
                @mismatch { in "\$1 OK %*2x %?d %0<sum8>";}
            }

left        {   out "~ \$1 2A %01<sum8>"; 
                in "\$1 OK %*2x %d," "1-%(\$2:FIL1:USED.VAL)d," "2-%(\$2:FIL2:USED.VAL)d," "3-%(\$2:FIL3:USED.VAL)d," "4-%(\$2:FIL4:USED.VAL)d %0<sum8>"; 
                @mismatch { in "\$1 OK %*2x %?d %0<sum8>";} 
            }

setpower    {   out "~ \$1 E2 %d,W %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

autofil     {   out "~ \$1 2C %{NO|YES} %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

ctlsrc      {   out "~ \$1 8B %(\$2:RELAY.VAL)d,%d %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
                @mismatch { in "\$1 ER %*2x %(\$2:ERROR.VAL)#s";}
            }

ctlsrc_q    {   out "~ \$1 8B %(\$2:RELAY.VAL)d,%d %01<sum8>";
                in  "\$1 OK %*2x %0<sum8>";
                @mismatch { in "\$1 ER %*2x %(\$2:ERROR.VAL)#s";}
            }

get_ctlsrc_q  {   out "~ \$1 8C %(\$2:RELAY.VAL)d,0 %01<sum8>";
                in  "\$1 OK %*2x %{0|1|2|3|4} %0<sum8>";
            }

set_upper_thresh    {   out "~ \$1 EA %(\$2:RELAY.VAL)d,%3.1E %01<sum8>";
                        in  "\$1 OK %*2x %0<sum8>";
                    }

set_lower_thresh    {   out "~ \$1 EB %(\$2:RELAY.VAL)d,%3.1E %01<sum8>";
                        in  "\$1 OK %*2x %0<sum8>";
                    }

get_upper_thresh    {   out "~ \$1 82 %(\$2:RELAY.VAL)d %01<sum8>";
                        in  "\$1 OK %*2x %g %*s %0<sum8>";
                        @mismatch { in "\$1 OK %*2x %*g %*g";}
                    }

get_lower_thresh    {   out "~ \$1 31 %(\$2:RELAY.VAL)d %01<sum8>";
                        in  "\$1 OK %*2x %g %*s %0<sum8>";
                        @mismatch { in "\$1 OK %*2x %*g %*g";}
                    }

setfil      {   out "~ \$1 29 %(\$2:RELAY.VAL)d,%{1|2|3|4} %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

setfil_q    {   out "~ \$1 29 %(\$2:RELAY.VAL)d,%{1|2|3|4} %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

tspoff      {   out "~ \$1 28 %(\$2:RELAY.VAL)d %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

tspoff_q    {   out "~ \$1 28 %(\$2:RELAY.VAL)d %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

clear       {   out "~ \$1 2B %01<sum8>";
                in "\$1 OK %*2x %0<sum8>";
            }

getconfig   {   out "~ \$1 87 %01<sum8>"; 
                in "\$1 OK %*2x %{0|1|2|3|4|5|6|7|8} %0<sum8>"; 
                @mismatch { in "\$1 OK %*2x %?d %0<sum8>";}
            }

debug       {   ExtraInput = Ignore; out "~ %s %01<sum8>"; in "%*d %*{OK|ER} %*2x %s %0<sum8>";}

